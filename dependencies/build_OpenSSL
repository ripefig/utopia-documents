#! /bin/bash

source "buildutils.sh"

# PACKAGE ####################################################################

PACKAGE=OpenSSL
DEPENDENCIES=

# SETUP ######################################################################

set -e
cd `dirname "$0"`
PREFIX=`pwd`

if [ -e ".${PACKAGE}-BUILT" ]; then
  exit 0
fi

# DEPENDENCIES ###############################################################

build_deps $DEPENDENCIES

# FETCH SOURCE #############################################################

mkdir -p build
cd build

PACKAGE_URL_REF="${PACKAGE}_URL"
PACKAGE_URL="${!PACKAGE_URL_REF}"
PACKAGE_DIR_REF="${PACKAGE}_DIR"
PACKAGE_DIR="${!PACKAGE_DIR_REF}"
PACKAGE_EXTRACT_REF="${PACKAGE}_EXTRACT"
PACKAGE_EXTRACT="${!PACKAGE_EXTRACT_REF}"
PACKAGE_FILENAME=`basename ${PACKAGE_URL}`

if [ ! -e "${PACKAGE_FILENAME}" ]; then
  echo "Fetching ${PACKAGE_URL} ..."
  curl -L -O "${PACKAGE_URL}"
fi

echo "Extracting ${PACKAGE_FILENAME} ..."
${PACKAGE_EXTRACT} "${PACKAGE_FILENAME}"

echo "Building ${PACKAGE} ..."
cd ${PACKAGE_DIR}

  # BUILD STEPS ##############################################################

if [ x"${ARCH}" = x"Darwin" ]; then
  ./Configure --prefix="${PREFIX}" shared darwin64-x86_64-cc
  make
  make install
elif [ x"${ARCH}" = x"Windows" ]; then
  ./config --prefix="${PREFIX}" shared
  make
  make install
else
  echo ${PACKAGE} not needed on this platform
fi

##############################################################################

cd "${PREFIX}"
touch ".${PACKAGE}-BUILT"

##############################################################################
